.model small
.stack 100
.data
a dw 1234h
b dw 4567h
c dw ?
d dw ?
temp dw ?
str1 db 10,13,"first number is:1234 $"
str2 db 10,13, "second number is:4567 $"
restr db 10,13, "result is: $"
qstr db 10,13, "quotient is: $"
rstr db 10,13, "remainder is: $"
menu db 10,13, "menu"
db 10,13, "1.add"
db 10,13, "2.sub"
db 10,13, "3.multiplication"
db 10,13, "4.division"
db 10,13, "5.exit"
db 10,13, "enter your choice : $"
strdisp macro str1
lea dx,str1
mov ah,09h
int 21h
endm
.code
.startup
mov ax,@data
mov ds,ax
strdisp menu
mov ah,01h
int 21h
cmp al,'1'
je add1


cmp al,'2'
je sub1
;jmp ex
cmp al,'3'
je mul1
;jmp ex
cmp al,'4'
je div1
cmp al,'5'
je EX

add1:call sum
jmp ex
sub1:call diff
jmp ex
mul1:call multi
jmp ex
div1:call by1
ex:mov ah,4ch
int 21h
.exit
sum proc near
mov ax,a
mov bx,b
add ax,bx
mov c,ax
strdisp str1
strdisp str2
strdisp restr
mov ax,c
mov temp,ax
call dispdigit
ret
sum endp
diff proc near
mov ax,a
mov bx,b
sub ax,bx
mov c,ax
strdisp str1
strdisp str2
strdisp restr
mov ax,c
mov temp,ax
call dispdigit
ret
diff endp
multi proc near
mov ax,a
mov bx,b
mul bx
mov c,ax
mov d,dx
strdisp str1
strdisp str2
strdisp restr
mov ax,c
mov temp,ax
call dispdigit
mov dx,d
mov temp,dx
call dispdigit
ret
multi endp
by1 proc near
mov ax,a
cmp ax,0h
jb sim
mov dx,0000h
jmp down
sim:mov dx,0ffffh
down:div b
mov c,ax
mov d,dx
strdisp str1
strdisp str2
strdisp qstr
mov ax,c
mov temp,ax
call dispdigit
strdisp rstr
mov dx,d
mov temp,dx
call dispdigit
ret
by1 endp
dispdigit proc near
mov cx,04h
up:mov ax,temp
   rol ax,04h
mov temp,ax
and ax,000fh
cmp ax,000ah
jb dig
add al,07h
dig:add al,30h
mov dl,al
mov ah,02h
int 21h
loop up
ret
dispdigit endp
end

